{"file":"/Users/nicolasbernard/Desktop/coders-workplace/backend/file-system/src/__tests__/test-setup.ts","mappings":"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","names":[],"sources":["/Users/nicolasbernard/Desktop/coders-workplace/backend/file-system/src/__tests__/test-setup.ts"],"sourcesContent":["// src/__tests__/test-setup.ts\n\n/**\n * Configuration globale des tests pour le système de fichiers Coders V1\n * \n * Ce fichier configure l'environnement de test complet selon les standards 07-08\n * et prépare tous les mocks, utilities et matchers nécessaires pour les tests\n * d'infrastructure du composant C-06 File System.\n * \n * Fonctionnalités :\n * - Respect des variables d'environnement .env.test (Step 1.1)\n * - Configuration complémentaire pour tests avancés (Step 1.2+)\n * - Mocks AWS SDK pour Garage S3\n * - Utilities de test (buffers, UUID, checksums)\n * - Matchers Jest personnalisés\n * - Helpers spécifiques au stockage\n * - Configuration globale Jest\n * \n * @author DevOps Lead\n * @version 1.1 - Adapté pour Step 1.1 + 1.2\n * @conformite 07-08 Coding Standards\n */\n\nimport { randomBytes, createHash } from 'crypto';\n\n// ============================================================================\n// CONFIGURATION VARIABLES D'ENVIRONNEMENT\n// ============================================================================\n\n/**\n * Configuration complémentaire des variables d'environnement pour tests\n * Respecte les variables déjà chargées depuis .env.test et ajoute uniquement les manquantes\n */\nconst setupTestEnvironment = (): void => {\n  // Variables complémentaires (seulement si pas déjà définies)\n  const complementaryEnvVars = {\n    // Configuration Node.js (respect .env.test)\n    NODE_ENV: process.env.NODE_ENV || 'test',\n    TZ: process.env.TZ || 'UTC',\n    LOG_LEVEL: process.env.LOG_LEVEL || 'error',\n    \n    // Garage S3 Configuration (respect .env.test en priorité)\n    GARAGE_ENDPOINT: process.env.GARAGE_ENDPOINT || 'https://s3.test.coders.com',\n    GARAGE_ACCESS_KEY: process.env.GARAGE_ACCESS_KEY || 'GK_TEST_ACCESS_KEY_123456789',\n    GARAGE_SECRET_KEY: process.env.GARAGE_SECRET_KEY || 'test_secret_key_with_sufficient_length_for_aws_sdk_validation_requirements',\n    GARAGE_BUCKET_DOCUMENTS: process.env.GARAGE_BUCKET_DOCUMENTS || 'test-coders-documents',\n    GARAGE_BUCKET_BACKUPS: process.env.GARAGE_BUCKET_BACKUPS || 'test-coders-backups',\n    GARAGE_BUCKET_TEMP: process.env.GARAGE_BUCKET_TEMP || 'test-coders-temp',\n    GARAGE_REGION: process.env.GARAGE_REGION || 'eu-west-1',\n    GARAGE_FORCE_PATH_STYLE: process.env.GARAGE_FORCE_PATH_STYLE || 'true',\n    \n    // Garage S3 Configuration Tests d'Intégration (Step 1.2)\n    GARAGE_TEST_ENDPOINT: process.env.GARAGE_TEST_ENDPOINT || 'http://localhost:3900',\n    GARAGE_TEST_REGION: process.env.GARAGE_TEST_REGION || 'garage',\n    GARAGE_TEST_ACCESS_KEY: process.env.GARAGE_TEST_ACCESS_KEY || 'GK1234567890ABCDEFGH',\n    GARAGE_TEST_SECRET_KEY: process.env.GARAGE_TEST_SECRET_KEY || 'abcdef1234567890abcdef1234567890abcdef12',\n    GARAGE_TEST_BUCKET: process.env.GARAGE_TEST_BUCKET || `test-integration-${Date.now()}`,\n    \n    // CDN Configuration (respect .env.test)\n    CDN_BASE_URL: process.env.CDN_BASE_URL || 'https://cdn.test.coders.com',\n    CDN_CACHE_CONTROL: process.env.CDN_CACHE_CONTROL || 'public, max-age=300',\n    CDN_INVALIDATION_TOKEN: process.env.CDN_INVALIDATION_TOKEN || 'test_cdn_invalidation_token_123456789',\n    CDN_EDGE_LOCATIONS: process.env.CDN_EDGE_LOCATIONS || 'eu-west-1,us-east-1,ap-southeast-1',\n    CDN_DEFAULT_TTL: process.env.CDN_DEFAULT_TTL || '300',\n    CDN_MAX_TTL: process.env.CDN_MAX_TTL || '3600',\n    CDN_INVALIDATION_ENABLED: process.env.CDN_INVALIDATION_ENABLED || 'false',\n    \n    // Processing Configuration (respect .env.test)\n    MAX_FILE_SIZE: process.env.MAX_FILE_SIZE || '104857600', // Respect .env.test value\n    ALLOWED_MIME_TYPES: process.env.ALLOWED_MIME_TYPES || 'image/jpeg,image/png,image/gif,image/webp,application/pdf,text/plain,text/markdown,application/json',\n    VIRUS_SCAN_TIMEOUT: process.env.VIRUS_SCAN_TIMEOUT || '5000',\n    VIRUS_SCAN_ENABLED: process.env.VIRUS_SCAN_ENABLED || 'false',\n    SCAN_VIRUS_ENABLED: process.env.SCAN_VIRUS_ENABLED || 'false',\n    IMAGE_OPTIMIZATION_QUALITY: process.env.IMAGE_OPTIMIZATION_QUALITY || '85',\n    THUMBNAIL_SIZE: process.env.THUMBNAIL_SIZE || '128',\n    PDF_COMPRESSION_LEVEL: process.env.PDF_COMPRESSION_LEVEL || '6',\n    \n    // Security Configuration (respect .env.test)\n    PRESIGNED_URL_EXPIRY: process.env.PRESIGNED_URL_EXPIRY || '1800',\n    MAX_PRESIGNED_URLS: process.env.MAX_PRESIGNED_URLS || '10',\n    IP_RESTRICTION_ENABLED: process.env.IP_RESTRICTION_ENABLED || 'false',\n    RATE_LIMIT_UPLOADS_PER_MINUTE: process.env.RATE_LIMIT_UPLOADS_PER_MINUTE || '20',\n    ABUSE_BLOCK_DURATION: process.env.ABUSE_BLOCK_DURATION || '60',\n    DEVICE_FINGERPRINTING_ENABLED: process.env.DEVICE_FINGERPRINTING_ENABLED || 'false',\n    SECURITY_TOKEN_SECRET: process.env.SECURITY_TOKEN_SECRET || 'test_security_token_secret_with_minimum_32_characters_length_for_jwt_validation',\n    \n    // Backup et Versioning\n    BACKUP_RETENTION_DAYS: process.env.BACKUP_RETENTION_DAYS || '7',\n    VERSION_RETENTION_COUNT: process.env.VERSION_RETENTION_COUNT || '3',\n    AUTOMATED_BACKUP_ENABLED: process.env.AUTOMATED_BACKUP_ENABLED || 'false',\n    CROSS_REGION_REPLICATION: process.env.CROSS_REGION_REPLICATION || 'false',\n    \n    // Performance et Monitoring\n    GARAGE_REQUEST_TIMEOUT: process.env.GARAGE_REQUEST_TIMEOUT || '30000',\n    PROCESSING_TIMEOUT: process.env.PROCESSING_TIMEOUT || '60000',\n    CACHE_TTL_METADATA: process.env.CACHE_TTL_METADATA || '60',\n    CACHE_TTL_PRESIGNED_URL: process.env.CACHE_TTL_PRESIGNED_URL || '300',\n    \n    // Configuration Base de données (pour tests futurs)\n    DATABASE_URL: process.env.DATABASE_URL || 'postgresql://test:test@localhost:5432/test_coders_file_system',\n    REDIS_URL: process.env.REDIS_URL || 'redis://localhost:6379/15',\n    \n    // Configuration Authentification (intégration C-05)\n    JWT_SECRET: process.env.JWT_SECRET || 'test_jwt_secret_for_file_system_tests_with_sufficient_length',\n    JWT_EXPIRY: process.env.JWT_EXPIRY || '1h',\n    \n    // Divers\n    TEMP_UPLOAD_DIR: process.env.TEMP_UPLOAD_DIR || '/tmp/test-uploads',\n    CLEANUP_TEMP_FILES: process.env.CLEANUP_TEMP_FILES || 'true'\n  };\n\n  // Application uniquement des variables manquantes (pas d'écrasement)\n  Object.keys(complementaryEnvVars).forEach(key => {\n    if (!process.env[key]) {\n      process.env[key] = complementaryEnvVars[key];\n    }\n  });\n  \n  console.log('✅ Test environment variables configured for C-06 File System (respecting .env.test)');\n  console.log(`📝 Using configuration: MAX_FILE_SIZE=${process.env.MAX_FILE_SIZE}, GARAGE_ENDPOINT=${process.env.GARAGE_ENDPOINT}`);\n};\n\n// ============================================================================\n// MOCKS AWS SDK - Configuration complète pour Garage S3\n// ============================================================================\n\n/**\n * Configuration des mocks AWS SDK pour isolation des tests unitaires\n * Compatible avec @aws-sdk/client-s3 v3 et les méthodes utilisées dans GarageStorageService\n * Appliqué uniquement pour les tests unitaires (Step 1.2)\n */\nconst setupAWSMocks = (): void => {\n  // Mock principal du client S3 avec réponses par défaut\n  jest.mock('@aws-sdk/client-s3', () => ({\n    S3Client: jest.fn().mockImplementation(() => ({\n      send: jest.fn().mockResolvedValue({\n        // Valeurs par défaut pour éviter les erreurs undefined\n        ETag: '\"default-etag\"',\n        Location: 'https://test-garage.example.com/test-bucket/default-object',\n        UploadId: 'default-upload-id',\n        ContentLength: 1024,\n        ContentType: 'application/octet-stream',\n        LastModified: new Date(),\n        Metadata: {},\n        Body: {\n          on: jest.fn((event, callback) => {\n            if (event === 'data') {\n              setTimeout(() => callback(Buffer.from('test data')), 0);\n            } else if (event === 'end') {\n              setTimeout(() => callback(), 1);\n            }\n          }),\n          pipe: jest.fn()\n        }\n      }),\n      config: {\n        endpoint: process.env.GARAGE_ENDPOINT,\n        region: process.env.GARAGE_REGION,\n        credentials: {\n          accessKeyId: process.env.GARAGE_ACCESS_KEY,\n          secretAccessKey: process.env.GARAGE_SECRET_KEY\n        }\n      },\n      destroy: jest.fn()\n    })),\n    \n    // Commands pour opérations de base\n    PutObjectCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    GetObjectCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    DeleteObjectCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    HeadObjectCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    ListObjectsV2Command: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    \n    // Commands pour multipart upload\n    CreateMultipartUploadCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    UploadPartCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    CompleteMultipartUploadCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    AbortMultipartUploadCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    \n    // Commands avancées\n    CopyObjectCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    GetBucketLocationCommand: jest.fn().mockImplementation((input) => ({ \n      input,\n      resolveMiddleware: jest.fn() \n    })),\n    \n    // Waiters et utilitaires\n    waitUntilObjectExists: jest.fn().mockResolvedValue({}),\n    waitUntilObjectNotExists: jest.fn().mockResolvedValue({})\n  }));\n\n  // Mock des utilitaires S3 avec structure correcte\n  jest.mock('@aws-sdk/s3-request-presigner', () => ({\n    getSignedUrl: jest.fn().mockImplementation(async (client, command, options = {}) => {\n      const expiresIn = options.expiresIn || 3600;\n      const mockUrl = `https://test-garage.example.com/test-bucket/mock-object?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Expires=${expiresIn}`;\n      return Promise.resolve(mockUrl);\n    })\n  }));\n\n  // Mock de la librairie de upload multipart avec réponse complète\n  jest.mock('@aws-sdk/lib-storage', () => ({\n    Upload: jest.fn().mockImplementation((params) => ({\n      done: jest.fn().mockResolvedValue({\n        ETag: '\"mock-multipart-etag\"',\n        Location: `https://test-garage.example.com/test-bucket/${params.params.Key}`,\n        Key: params.params.Key,\n        Bucket: params.params.Bucket\n      }),\n      on: jest.fn(),\n      abort: jest.fn()\n    }))\n  }));\n\n  // Mock UUID pour reproductibilité des tests\n  jest.mock('uuid', () => ({\n    v4: jest.fn(() => 'mock-uuid-v4-for-tests-12345678')\n  }));\n  \n  console.log('🔧 AWS SDK mocks configured for unit tests (corrected version)');\n};\n\n// ============================================================================\n// CONFIGURATION GLOBALE JEST\n// ============================================================================\n\n/**\n * Configuration avant tous les tests\n * Mise en place de l'environnement de test complet\n */\nbeforeAll(async () => {\n  // 1. Configuration variables d'environnement complémentaires\n  // (jest.env.setup.js a déjà chargé .env.test)\n  setupTestEnvironment();\n  \n  // 2. Configuration des mocks AWS SDK pour tests unitaires\n  setupAWSMocks();\n  \n  // 3. Configuration timezone pour tests déterministes\n  process.env.TZ = 'UTC';\n  \n  // 4. Configuration des timeouts pour tests d'intégration\n  jest.setTimeout(60000); // 60 secondes max par test (pour tests d'intégration)\n  \n  // 5. Configuration console selon LOG_LEVEL de .env.test\n  const originalConsole = console;\n  if (process.env.NODE_ENV === 'test') {\n    const logLevel = process.env.LOG_LEVEL || 'error';\n    global.console = {\n      ...originalConsole,\n      log: logLevel === 'error' ? jest.fn() : originalConsole.log,\n      debug: jest.fn(), // Toujours masquer debug\n      info: logLevel === 'error' ? jest.fn() : originalConsole.info,\n      warn: originalConsole.warn, // Garder les warnings\n      error: originalConsole.error // Garder les erreurs\n    };\n  }\n  \n  console.log('🧪 Jest test environment fully configured for Step 1.1 + 1.2');\n});\n\n/**\n * Configuration avant chaque test\n * Reset des mocks et état propre\n */\nbeforeEach(() => {\n  // Reset des mocks entre chaque test pour isolation\n  jest.clearAllMocks();\n  \n  // Reset des timers si utilisés dans les tests\n  if (jest.isMockFunction(setTimeout)) {\n    jest.clearAllTimers();\n  }\n});\n\n/**\n * Nettoyage après chaque test\n * Optionnel : nettoyage spécifique si nécessaire\n */\nafterEach(async () => {\n  // Attendre que tous les timers se terminent\n  if (jest.isMockFunction(setTimeout)) {\n    jest.runOnlyPendingTimers();\n  }\n  \n  // Petit délai pour permettre aux promesses de se résoudre\n  await new Promise(resolve => setTimeout(resolve, 10));\n});\n\n/**\n * Nettoyage après tous les tests\n * Restauration de l'état initial\n */\nafterAll(() => {\n  // Restauration des mocks\n  jest.restoreAllMocks();\n  \n  // Restauration console si nécessaire\n  if (process.env.NODE_ENV === 'test') {\n    // Restaurer console sera fait automatiquement par Jest\n  }\n  \n  console.log('🧹 Jest test environment cleaned up');\n});\n\n// ============================================================================\n// UTILITIES DE TEST - Helpers pour création de données\n// ============================================================================\n\n/**\n * Crée un buffer de test standard avec contenu spécifié\n * \n * @param content Contenu du buffer (défaut: contenu de test standard)\n * @param encoding Encodage à utiliser (défaut: utf8)\n * @returns Buffer de test\n */\nexport function createTestFileBuffer(content: string = 'test file content', encoding: BufferEncoding = 'utf8'): Buffer {\n  return Buffer.from(content, encoding);\n}\n\n/**\n * Crée un buffer de taille spécifique avec contenu aléatoire\n * Utile pour tests de performance et validation taille\n * \n * @param sizeBytes Taille du buffer en octets\n * @returns Buffer avec contenu aléatoire\n */\nexport function createRandomBuffer(sizeBytes: number): Buffer {\n  return randomBytes(sizeBytes);\n}\n\n/**\n * Crée un fichier PDF valide minimal pour tests\n * Compatible avec les validateurs PDF standards\n * \n * @returns Buffer contenant un PDF valide minimal\n */\nexport function createTestPDFBuffer(): Buffer {\n  const pdfContent = [\n    '%PDF-1.4',\n    '1 0 obj',\n    '<<',\n    '/Type /Catalog',\n    '/Pages 2 0 R',\n    '>>',\n    'endobj',\n    '2 0 obj',\n    '<<',\n    '/Type /Pages',\n    '/Kids [3 0 R]',\n    '/Count 1',\n    '>>',\n    'endobj',\n    '3 0 obj',\n    '<<',\n    '/Type /Page',\n    '/Parent 2 0 R',\n    '/MediaBox [0 0 612 792]',\n    '>>',\n    'endobj',\n    'xref',\n    '0 4',\n    '0000000000 65535 f ',\n    '0000000009 00000 n ',\n    '0000000074 00000 n ',\n    '0000000120 00000 n ',\n    'trailer',\n    '<<',\n    '/Size 4',\n    '/Root 1 0 R',\n    '>>',\n    'startxref',\n    '179',\n    '%%EOF'\n  ].join('\\n');\n  \n  return Buffer.from(pdfContent, 'utf8');\n}\n\n/**\n * Crée une image JPEG valide minimale pour tests\n * Header JPEG conforme aux standards pour validation\n * \n * @returns Buffer contenant un JPEG valide minimal\n */\nexport function createTestJPEGBuffer(): Buffer {\n  const jpegHeader = Buffer.from([\n    0xFF, 0xD8, // SOI (Start of Image)\n    0xFF, 0xE0, // APP0\n    0x00, 0x10, // Length of APP0 segment\n    0x4A, 0x46, 0x49, 0x46, 0x00, // \"JFIF\\0\"\n    0x01, 0x01, // JFIF version 1.1\n    0x01, // Density units (inches)\n    0x00, 0x48, // X density (72 DPI)\n    0x00, 0x48, // Y density (72 DPI)\n    0x00, 0x00, // Thumbnail width and height (0 = no thumbnail)\n    \n    // Minimal quantization table and image data\n    0xFF, 0xC0, // SOF0 (Start of Frame)\n    0x00, 0x11, // Length\n    0x08, // Data precision\n    0x00, 0x01, 0x00, 0x01, // Image dimensions (1x1)\n    0x01, // Number of components\n    0x01, 0x11, 0x00, // Component info\n    \n    0xFF, 0xDA, // SOS (Start of Scan)\n    0x00, 0x08, // Length\n    0x01, // Number of components\n    0x01, 0x00, // Component selector and Huffman table\n    0x00, 0x3F, 0x00, // Spectral selection\n    \n    0xFF, 0xD9 // EOI (End of Image)\n  ]);\n  \n  return jpegHeader;\n}\n\n/**\n * Crée une image PNG valide minimale pour tests\n * Header PNG conforme aux standards\n * \n * @returns Buffer contenant un PNG valide minimal\n */\nexport function createTestPNGBuffer(): Buffer {\n  const pngSignature = Buffer.from([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A]);\n  const ihdrChunk = Buffer.from([\n    0x00, 0x00, 0x00, 0x0D, // Length\n    0x49, 0x48, 0x44, 0x52, // \"IHDR\"\n    0x00, 0x00, 0x00, 0x01, // Width: 1\n    0x00, 0x00, 0x00, 0x01, // Height: 1\n    0x08, 0x02, 0x00, 0x00, 0x00, // Bit depth, color type, compression, filter, interlace\n    0x90, 0x77, 0x53, 0xDE // CRC\n  ]);\n  const idatChunk = Buffer.from([\n    0x00, 0x00, 0x00, 0x0A, // Length\n    0x49, 0x44, 0x41, 0x54, // \"IDAT\"\n    0x78, 0x9C, 0x62, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, // Compressed data\n    0xE2, 0x21, 0xBC, 0x33 // CRC\n  ]);\n  const iendChunk = Buffer.from([\n    0x00, 0x00, 0x00, 0x00, // Length\n    0x49, 0x45, 0x4E, 0x44, // \"IEND\"\n    0xAE, 0x42, 0x60, 0x82 // CRC\n  ]);\n  \n  return Buffer.concat([pngSignature, ihdrChunk, idatChunk, iendChunk]);\n}\n\n/**\n * Crée un fichier JSON valide pour tests\n * \n * @param data Données à sérialiser (défaut: objet de test)\n * @returns Buffer contenant du JSON valide\n */\nexport function createTestJSONBuffer(data: any = { test: true, timestamp: new Date().toISOString() }): Buffer {\n  return Buffer.from(JSON.stringify(data, null, 2), 'utf8');\n}\n\n/**\n * Simule un délai asynchrone pour tests de performance et timing\n * \n * @param ms Délai en millisecondes\n * @returns Promise qui se résout après le délai\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Génère un UUID v4 valide pour tests\n * Version déterministe pour reproductibilité si nécessaire\n * \n * @param deterministic Si true, génère un UUID prévisible pour tests\n * @returns UUID v4 valide\n */\nexport function generateTestUUID(deterministic: boolean = false): string {\n  if (deterministic) {\n    return '12345678-1234-4567-8901-123456789012';\n  }\n  \n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\n/**\n * Génère une clé de stockage de test valide\n * \n * @param prefix Préfixe de la clé (défaut: test-files)\n * @param filename Nom du fichier (défaut: généré automatiquement)\n * @returns Clé de stockage valide\n */\nexport function generateTestStorageKey(prefix: string = 'test-files', filename?: string): string {\n  const name = filename || `test-file-${Date.now()}-${Math.random().toString(36).substring(7)}`;\n  return `${prefix}/${name}`;\n}\n\n/**\n * Calcule le checksum MD5 d'un buffer\n * \n * @param buffer Buffer à hash\n * @returns Checksum MD5 en hexadécimal\n */\nexport function calculateMD5(buffer: Buffer): string {\n  return createHash('md5').update(buffer).digest('hex');\n}\n\n/**\n * Calcule le checksum SHA256 d'un buffer\n * \n * @param buffer Buffer à hash\n * @returns Checksum SHA256 en hexadécimal\n */\nexport function calculateSHA256(buffer: Buffer): string {\n  return createHash('sha256').update(buffer).digest('hex');\n}\n\n/**\n * Génère un checksum MD5 de test (format valide mais contenu fictif)\n * \n * @returns Checksum MD5 valide pour tests\n */\nexport function generateTestMD5(): string {\n  return 'a1b2c3d4e5f6789012345678901234567';\n}\n\n/**\n * Génère un checksum SHA256 de test (format valide mais contenu fictif)\n * \n * @returns Checksum SHA256 valide pour tests\n */\nexport function generateTestSHA256(): string {\n  return 'a1b2c3d4e5f6789012345678901234567890abcdef123456789012345678901234';\n}\n\n/**\n * Valide qu'une chaîne respecte le format UUID v4\n * \n * @param uuid Chaîne à valider\n * @returns true si UUID valide\n */\nexport function isValidUUID(uuid: string): boolean {\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  return uuidRegex.test(uuid);\n}\n\n/**\n * Crée des métadonnées d'objet de test\n * \n * @param overrides Propriétés à surcharger\n * @returns Métadonnées d'objet pour tests\n */\nexport function createTestObjectMetadata(overrides: any = {}): any {\n  return {\n    contentType: 'text/plain',\n    userId: 'test-user-123',\n    projectId: 'test-project-456',\n    customMetadata: {\n      testId: generateTestUUID(true),\n      environment: 'test'\n    },\n    ...overrides\n  };\n}\n\n// ============================================================================\n// MATCHERS PERSONNALISÉS JEST - Assertions spécialisées\n// ============================================================================\n\n/**\n * Extension des matchers Jest pour assertions spécialisées du système de fichiers\n */\ndeclare global {\n  namespace jest {\n    interface Matchers<R> {\n      toBeValidFileSize(): R;\n      toBeValidMimeType(): R;\n      toBeValidFilename(): R;\n      toBeValidStorageKey(): R;\n      toBeValidChecksum(algorithm: 'md5' | 'sha256'): R;\n      toBeValidUUID(): R;\n      toBeValidBuffer(): R;\n      toBeValidPresignedUrl(): R;\n      toHaveValidFileStructure(): R;\n    }\n  }\n}\n\n// Extension des matchers Jest avec implémentations complètes\nexpect.extend({\n  /**\n   * Vérifie qu'une taille de fichier est dans les limites autorisées\n   */\n  toBeValidFileSize(received: number) {\n    const maxSize = parseInt(process.env.MAX_FILE_SIZE || '104857600'); // Utilise la valeur de .env.test\n    const pass = typeof received === 'number' && received > 0 && received <= maxSize;\n    \n    return {\n      message: () => \n        `expected ${received} to be a valid file size (> 0 and <= ${maxSize} bytes)`,\n      pass\n    };\n  },\n\n  /**\n   * Vérifie qu'un type MIME est valide selon les standards\n   */\n  toBeValidMimeType(received: string) {\n    const mimeTypeRegex = /^[a-z-]+\\/[a-z0-9-+.]+$/i;\n    const pass = typeof received === 'string' && mimeTypeRegex.test(received);\n    \n    return {\n      message: () => \n        `expected \"${received}\" to be a valid MIME type (format: type/subtype)`,\n      pass\n    };\n  },\n\n  /**\n   * Vérifie qu'un nom de fichier est valide (sécurité et longueur)\n   */\n  toBeValidFilename(received: string) {\n    const pass = typeof received === 'string' &&\n                 received.length > 0 && \n                 received.length <= 255 && \n                 !/[<>:\"/\\\\|?*\\x00-\\x1f]/.test(received) &&\n                 !received.includes('..') &&\n                 received !== '.' &&\n                 received !== '..';\n    \n    return {\n      message: () => \n        `expected \"${received}\" to be a valid filename (1-255 chars, no forbidden characters)`,\n      pass\n    };\n  },\n\n  /**\n   * Vérifie qu'une clé de stockage S3 est valide\n   */\n  toBeValidStorageKey(received: string) {\n    const pass = typeof received === 'string' &&\n                 received.length > 0 &&\n                 received.length <= 1024 && // Limite S3\n                 !received.startsWith('/') &&\n                 !received.endsWith('/') &&\n                 !received.includes('//') &&\n                 !received.includes('..') &&\n                 !/[\\x00-\\x1f\\x7f]/.test(received); // Pas de caractères de contrôle\n    \n    return {\n      message: () => \n        `expected \"${received}\" to be a valid storage key (S3 compatible)`,\n      pass\n    };\n  },\n\n  /**\n   * Vérifie qu'un checksum a le format attendu\n   */\n  toBeValidChecksum(received: string, algorithm: 'md5' | 'sha256') {\n    const patterns = {\n      md5: /^[a-f0-9]{32}$/i,\n      sha256: /^[a-f0-9]{64}$/i\n    };\n    \n    const pass = typeof received === 'string' && patterns[algorithm].test(received);\n    \n    return {\n      message: () => \n        `expected \"${received}\" to be a valid ${algorithm.toUpperCase()} checksum`,\n      pass\n    };\n  },\n\n  /**\n   * Vérifie qu'une chaîne est un UUID v4 valide\n   */\n  toBeValidUUID(received: string) {\n    const pass = isValidUUID(received);\n    \n    return {\n      message: () => \n        `expected \"${received}\" to be a valid UUID v4`,\n      pass\n    };\n  },\n\n  /**\n   * Vérifie qu'un objet est un Buffer valide et non vide\n   */\n  toBeValidBuffer(received: any) {\n    const pass = Buffer.isBuffer(received) && received.length > 0;\n    \n    return {\n      message: () => \n        `expected ${received} to be a valid non-empty Buffer`,\n      pass\n    };\n  },\n\n  /**\n   * Vérifie qu'une URL pré-signée a le format attendu\n   */\n  toBeValidPresignedUrl(received: string) {\n    try {\n      const url = new URL(received);\n      const hasSignature = url.searchParams.has('X-Amz-Signature') || \n                          url.searchParams.has('Signature') ||\n                          url.searchParams.has('X-Amz-Algorithm');\n      const pass = hasSignature && (url.protocol === 'https:' || url.protocol === 'http:');\n      \n      return {\n        message: () => \n          `expected \"${received}\" to be a valid presigned URL with signature parameters`,\n        pass\n      };\n    } catch {\n      return {\n        message: () => \n          `expected \"${received}\" to be a valid presigned URL`,\n        pass: false\n      };\n    }\n  },\n\n  /**\n   * Vérifie qu'un objet a la structure attendue d'un fichier\n   */\n  toHaveValidFileStructure(received: any) {\n    const requiredFields = ['id', 'filename', 'contentType', 'size', 'storageKey'];\n    const hasRequiredFields = requiredFields.every(field => \n      received && typeof received === 'object' && field in received\n    );\n    \n    const pass = hasRequiredFields && \n                 typeof received.size === 'number' &&\n                 received.size > 0;\n    \n    return {\n      message: () => \n        `expected object to have valid file structure with fields: ${requiredFields.join(', ')}`,\n      pass\n    };\n  }\n});\n\n// ============================================================================\n// EXPORT CONFIGURATION\n// ============================================================================\n\n/**\n * Configuration exportée pour utilisation dans d'autres fichiers de test\n * Utilise les valeurs de .env.test en priorité\n */\nexport const testConfig = {\n  maxFileSize: parseInt(process.env.MAX_FILE_SIZE || '104857600'),\n  allowedMimeTypes: (process.env.ALLOWED_MIME_TYPES || '').split(','),\n  virusScanEnabled: process.env.VIRUS_SCAN_ENABLED === 'true',\n  testBucket: process.env.GARAGE_TEST_BUCKET || 'test-bucket',\n  testEndpoint: process.env.GARAGE_TEST_ENDPOINT || 'http://localhost:3900',\n  garageEndpoint: process.env.GARAGE_ENDPOINT || 'https://s3.test.coders.com',\n  cdnBaseUrl: process.env.CDN_BASE_URL || 'https://cdn.test.coders.com'\n};\n"],"version":3}