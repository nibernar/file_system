{"file":"/Users/nicolasbernard/Desktop/coders-workplace/backend/file-system/jest.env.setup.js","mappings":"AAAA,oBAAoB;AACpB,6DAA6D;AAE7D,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAEzB,uEAAuE;AACvE,SAAS,WAAW;IAClB,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IAEtD,IAAI,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC;QAC/B,MAAM,UAAU,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAExD,8BAA8B;QAC9B,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACpC,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAEhC,2CAA2C;YAC3C,IAAI,WAAW,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;gBAChD,MAAM,CAAC,GAAG,EAAE,GAAG,UAAU,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpD,IAAI,GAAG,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACjC,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC1C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC;gBAClC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;IACpE,CAAC;SAAM,CAAC;QACN,OAAO,CAAC,IAAI,CAAC,6DAA6D,CAAC,CAAC;IAC9E,CAAC;AACH,CAAC;AAED,gDAAgD;AAChD,WAAW,EAAE,CAAC;AAEd,oCAAoC;AACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC1B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;AAChC,CAAC;AAED,kDAAkD;AAClD,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC","names":[],"sources":["/Users/nicolasbernard/Desktop/coders-workplace/backend/file-system/jest.env.setup.js"],"sourcesContent":["// jest.env.setup.js\n// Charge automatiquement le fichier .env.test pour les tests\n\nconst path = require('path');\nconst fs = require('fs');\n\n// Fonction pour charger les variables d'environnement depuis .env.test\nfunction loadTestEnv() {\n  const envTestPath = path.join(__dirname, '.env.test');\n  \n  if (fs.existsSync(envTestPath)) {\n    const envContent = fs.readFileSync(envTestPath, 'utf8');\n    \n    // Parser le fichier .env.test\n    envContent.split('\\n').forEach(line => {\n      const trimmedLine = line.trim();\n      \n      // Ignorer les commentaires et lignes vides\n      if (trimmedLine && !trimmedLine.startsWith('#')) {\n        const [key, ...valueParts] = trimmedLine.split('=');\n        if (key && valueParts.length > 0) {\n          const value = valueParts.join('=').trim();\n          process.env[key.trim()] = value;\n        }\n      }\n    });\n    \n    console.log('✅ Loaded test environment variables from .env.test');\n  } else {\n    console.warn('⚠️ .env.test file not found, using default test environment');\n  }\n}\n\n// Charger les variables d'environnement de test\nloadTestEnv();\n\n// S'assurer que NODE_ENV est défini\nif (!process.env.NODE_ENV) {\n  process.env.NODE_ENV = 'test';\n}\n\n// Configuration timezone pour tests déterministes\nprocess.env.TZ = 'UTC';"],"version":3}